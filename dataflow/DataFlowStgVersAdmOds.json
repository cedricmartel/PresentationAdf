{
	"name": "DataFlowStgVersAdmOds",
	"properties": {
		"description": "Ce data flow permet d'alimenter dynamiquement une table ODS / ADM à partir d'une table STG, en ajout / modif ou en ajout / modif / suppression logique\n",
		"folder": {
			"name": "2 Alimentation ODS"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Bdd",
						"type": "DatasetReference"
					},
					"name": "Source",
					"description": "Ces données vont être préfixées par SRC_ dans le flux de données"
				},
				{
					"dataset": {
						"referenceName": "Bdd",
						"type": "DatasetReference"
					},
					"name": "Destination",
					"description": "Ces données vont être préfixées par DST_ dans le flux de données"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "TableDynamique",
						"type": "DatasetReference"
					},
					"name": "SinkRejet"
				},
				{
					"dataset": {
						"referenceName": "TableDynamique",
						"type": "DatasetReference"
					},
					"name": "SinkInsertion"
				},
				{
					"dataset": {
						"referenceName": "TableDynamique",
						"type": "DatasetReference"
					},
					"name": "SinkModification"
				}
			],
			"transformations": [
				{
					"name": "Join"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "EstAjout"
				},
				{
					"name": "EstModification"
				},
				{
					"name": "EstSuppression"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "HashClefSource"
				},
				{
					"name": "HashClefDestination"
				},
				{
					"name": "SelectRejet"
				},
				{
					"name": "SelectInsertion"
				},
				{
					"name": "PrefixeSRC"
				},
				{
					"name": "PrefixeDST"
				},
				{
					"name": "SelectSuppression"
				},
				{
					"name": "SelectModification"
				},
				{
					"name": "Update"
				},
				{
					"name": "UnionModification"
				},
				{
					"name": "Insert"
				},
				{
					"name": "SuppressionControle"
				}
			],
			"script": "parameters{\n\tIdSuiviPackage as integer (1),\n\tTableSource as string ('Adm.RefCatLtbStgVersAdm'),\n\tTableDestination as string ('adm.RefCatLtb'),\n\tColonnesClef as string ('CodeHierarchie,CodeLtb'),\n\tActiverSuppressions as boolean (true()),\n\tFiltreSqlSources as string ('')\n}\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: ('SELECT * FROM ' + $TableSource + case(isNull($FiltreSqlSources) || length($FiltreSqlSources) == 0, '', ' WHERE ' + $FiltreSqlSources)),\n\tformat: 'query') ~> Source\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: ('SELECT * FROM ' + $TableDestination + ' WHERE 1=1 ' + case($ActiverSuppressions, ' AND Supprime = 0', '') + case(isNull($FiltreSqlSources) || length($FiltreSqlSources) == 0, '', ' AND (' + $FiltreSqlSources + ')')),\n\tformat: 'query') ~> Destination\nPrefixeSRC, PrefixeDST join(SRC_ControleClef == DST_ControleClef,\n\tjoinType:'outer',\n\tbroadcast: 'auto')~> Join\nDerivedColumn1 split(!isNull(MotifRejet),\n\tisNull(DST_ControleModification),\n\tisNull(SRC_ControleModification) && $ActiverSuppressions,\n\tSRC_ControleModification != DST_ControleModification && !isNull(SRC_ControleModification),\n\tdisjoint: false) ~> ConditionalSplit1@(Rejet, Insertion, Suppression, Modification)\nSelectInsertion derive(Supprime = false(),\n\t\tDateModification = DateCreation,\n\t\tUtilisateurModification = UtilisateurCreation) ~> EstAjout\nSelectModification derive(Supprime = false(),\n\t\tUtilisateurModification = 'FLUX') ~> EstModification\nSelectSuppression derive(Supprime = true(),\n\t\tUtilisateurModification = 'FLUX') ~> EstSuppression\nJoin derive(DateActuelle = currentTimestamp(),\n\t\tIdSuiviPackage = $IdSuiviPackage,\n\t\tMotifRejet = byName('SRC_MotifRejet'),\n\t\tUtilisateurFlux = 'FLUX') ~> DerivedColumn1\nSource derive(ControleClef = byName('ControleClef'),\n\t\tControleModification = byName('ControleModification')) ~> HashClefSource\nDestination derive(ControleClef = byName('ControleClef'),\n\t\tControleModification = byName('ControleModification')) ~> HashClefDestination\nConditionalSplit1@Rejet select(mapColumn(\n\t\tIdSuiviPackage,\n\t\tDateRejet = DateActuelle,\n\t\tMotifRejet,\n\t\teach(match(endsWith(name,\"Src\")&&startsWith(name,'SRC_')),\n\t\t\tsubstring($$,5,length($$)-7) = $$),\n\t\teach(match(name=='SRC_Controle'),\n\t\t\t'Controle' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectRejet\nConditionalSplit1@Insertion select(mapColumn(\n\t\tIdSuiviPackage,\n\t\tDateCreation = DateActuelle,\n\t\tUtilisateurCreation = UtilisateurFlux,\n\t\teach(match(in(split($ColonnesClef,','),replace(name,'SRC_',''))),\n\t\t\treplace($$,'SRC_','') = $$),\n\t\teach(match(startsWith(name,\"SRC_\")&&!in(split($ColonnesClef,','),replace(name,'SRC_',''))&&!endsWith(name,'Src')&&!in(['SRC_MotifRejet','SRC_dateOperation','SRC_DateOperation','SRC_Controle','SRC_ControleClef','SRC_ControleModification'],name)),\n\t\t\treplace($$,'SRC_','') = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectInsertion\nHashClefSource select(mapColumn(\n\t\teach(match(true()),\n\t\t\t'SRC_'+$$ = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PrefixeSRC\nHashClefDestination select(mapColumn(\n\t\teach(match(true()),\n\t\t\t'DST_'+$$ = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PrefixeDST\nConditionalSplit1@Suppression select(mapColumn(\n\t\tIdSuiviPackage,\n\t\tDateModification = DateActuelle,\n\t\teach(match(in(split($ColonnesClef,','),replace(name,'DST_',''))),\n\t\t\treplace($$,'DST_','') = $$),\n\t\teach(match(startsWith(name,\"DST_\")&&!in(split($ColonnesClef,','),replace(name,'DST_',''))),\n\t\t\treplace($$,'DST_','') = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSuppression\nConditionalSplit1@Modification select(mapColumn(\n\t\tIdSuiviPackage,\n\t\tDateModification = DateActuelle,\n\t\teach(match(in(split($ColonnesClef,','),replace(name,'SRC_',''))),\n\t\t\treplace($$,'SRC_','') = $$),\n\t\teach(match(startsWith(name,\"SRC_\")&&!in(split($ColonnesClef,','),replace(name,'SRC_',''))&&!endsWith(name,'Src')&&!in(['SRC_MotifRejet','SRC_dateOperation','SRC_DateOperation','SRC_Controle','SRC_ControleClef','SRC_ControleModification'],name)),\n\t\t\treplace($$,'SRC_','') = $$),\n\t\teach(match(name=='DST_DateCreation'),\n\t\t\t'DateCreation' = $$),\n\t\teach(match(name=='DST_UtilisateurCreation'),\n\t\t\t'UtilisateurCreation' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectModification\nSuppressionControle alterRow(updateIf(1==1)) ~> Update\nEstSuppression, EstModification union(byName: true)~> UnionModification\nEstAjout alterRow(insertIf(1==1)) ~> Insert\nUnionModification select(mapColumn(\n\t\teach(match(name!='Controle'))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SuppressionControle\nSelectRejet sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 3,\n\terrorHandlingOption: 'stopOnFirstError') ~> SinkRejet\nInsert sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError') ~> SinkInsertion\nUpdate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:(split($ColonnesClef,',')),\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2,\n\terrorHandlingOption: 'stopOnFirstError') ~> SinkModification"
		}
	}
}